# Add `~/bin` to the `$PATH`
export PATH="$HOME/.local/bin:$PATH";

if [ -d /opt/homebrew/bin ]
then 
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi
if [ -d /home/linuxbrew/.linuxbrew/bin ]
then 
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend `$PATH`.
# * ~/.extra can be used for other settings you donâ€™t want to commit.
for file in ~/.{path,exports,aliases,functions,extra}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Enable tab completion for `g` by marking it as an alias for `git`
if type _git &> /dev/null; then
    complete -o default -o nospace -F _git g;
fi;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;

# Add tab completion for `defaults read|write NSGlobalDomain`
# You could just use `-g` instead, but I like being explicit
complete -W "NSGlobalDomain" defaults;

# Add `killall` tab completion for common apps
complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall;

mkdir -p ~/.kube/configs
export KUBECONFIG=~/.kube/config
# for config in ~/.kube/configs/*; do
#   export KUBECONFIG=${KUBECONFIG}:${config}
# done

# Tell Docker CLI to talk to minikube's VM
# eval $(minikube docker-env)

# Load NVM and NodeJS
# load_nvm
